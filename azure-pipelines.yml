trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: aks

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'MSDN'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az deployment create \
      --location $LOCATION \
      --template-file 01-rg.json \
      --parameters rgName=$RG rgLocation=$LOCATION
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Create Resource Group'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'MSDN'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az role assignment create \
      --assignee $SPN_ID \
      --role Contributor \
      --scope "/subscriptions/$SUB_ID/resourceGroups/$RG"
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  env:
    SPN_ID: $(SPN_ID)
    SUB_ID: $(SUB_ID)
  displayName: 'Grant SPN Access'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'MSDN'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      curl -o get-akse.sh https://raw.githubusercontent.com/Azure/aks-engine/master/scripts/get-akse.sh
      chmod 700 get-akse.sh
      ./get-akse.sh
      aks-engine version
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Install aks-engine'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'MSDN'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      aks-engine generate $FILENAME --set masterProfile.dnsPrefix=$RG,servicePrincipalProfile.clientId=$SPN_ID,servicePrincipalProfile.secret=$SPN_PASSWORD
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Generate AKS Template'
  env:
    SPN_ID: $(SPN_ID)
    SPN_PASSWORD: $(SPN_PASSWORD)
- task: AzureCLI@2
  inputs:
    azureSubscription: 'MSDN'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az group deployment validate --resource-group $RG --template-file _output/$RG/azuredeploy.json --parameters _output/$RG/azuredeploy.parameters.json
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Validate Generated Template'
- task: CopyFiles@2
  displayName: 'Prepare Artifacts'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/aks/_output'
    Contents: |
     **/*
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: aks