trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Enterprise – MPN(3211b6f2-32a6-410d-97b9-5c24bcda7d0b)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az deployment create \
      --location $LOCATION \
      --template-file 01-rg.json \
      --parameters rgName=$RG rgLocation=$LOCATION
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Create Resource Group'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Enterprise – MPN(3211b6f2-32a6-410d-97b9-5c24bcda7d0b)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az group deployment create \
      --resource-group $RG \
      --template-file 02-vnet.json
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Create vNet'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Enterprise – MPN(3211b6f2-32a6-410d-97b9-5c24bcda7d0b)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      curl -o get-akse.sh https://raw.githubusercontent.com/Azure/aks-engine/master/scripts/get-akse.sh
      chmod 700 get-akse.sh
      ./get-akse.sh
      aks-engine version
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Install aks-engine'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Enterprise – MPN(3211b6f2-32a6-410d-97b9-5c24bcda7d0b)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      aks-engine generate $FILENAME --set masterProfile.dnsPrefix=$RG,servicePrincipalProfile.clientId=$SPN_ID,servicePrincipalProfile.secret=$SPN_PASSWORD
    workingDirectory: '$(Build.SourcesDirectory)/aks'
  displayName: 'Generate AKS Template'
